(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{492:function(t,a,s){"use strict";s.r(a);var v=s(3),_=Object(v.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"python中的运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python中的运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" python中的运算符")]),t._v(" "),s("p",[t._v('首先什么是运算符：简单来说 2+3，其中的 "+"，就是运算符。python 中有这么几个常用的运算符。')]),t._v(" "),s("h3",{attrs:{id:"算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算数运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 算数运算符")]),t._v(" "),s("p",[t._v("python 中的算术运算符有这么几种：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("+")]),t._v(" "),s("td",[t._v("加")]),t._v(" "),s("td",[t._v("1+2=3")])]),t._v(" "),s("tr",[s("td",[t._v("-")]),t._v(" "),s("td",[t._v("减")]),t._v(" "),s("td",[t._v("2-1=1")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("乘")]),t._v(" "),s("td",[t._v("1*2=2")])]),t._v(" "),s("tr",[s("td",[t._v("/")]),t._v(" "),s("td",[t._v("除")]),t._v(" "),s("td",[t._v("2/1=2")])]),t._v(" "),s("tr",[s("td",[t._v("%")]),t._v(" "),s("td",[t._v("取余")]),t._v(" "),s("td",[t._v("7%2=1")])]),t._v(" "),s("tr",[s("td",[t._v("//")]),t._v(" "),s("td",[t._v("取整")]),t._v(" "),s("td",[t._v("7//2=3")])]),t._v(" "),s("tr",[s("td",[t._v("**")]),t._v(" "),s("td",[t._v("幂")]),t._v(" "),s("td",[t._v("2**4=16")])])])]),t._v(" "),s("h3",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[t._v("主要是用来给「变量赋值」或者进行简单的计算在赋值给变量。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("基本赋值运算符")]),t._v(" "),s("td",[t._v("a=1")])]),t._v(" "),s("tr",[s("td",[t._v("+=")]),t._v(" "),s("td",[t._v("加法赋值运算")]),t._v(" "),s("td",[t._v("a+=1等效 a=a+1")])]),t._v(" "),s("tr",[s("td",[t._v("-=")]),t._v(" "),s("td",[t._v("减法赋值运算")]),t._v(" "),s("td",[t._v("a-=1等效 a=a-1")])]),t._v(" "),s("tr",[s("td",[t._v("*=")]),t._v(" "),s("td",[t._v("乘法赋值运算")]),t._v(" "),s("td",[t._v("a*=1等效 a=a*1")])]),t._v(" "),s("tr",[s("td",[t._v("/=")]),t._v(" "),s("td",[t._v("除法赋值运算")]),t._v(" "),s("td",[t._v("a/=1等效 a=a/1")])]),t._v(" "),s("tr",[s("td",[t._v("%=")]),t._v(" "),s("td",[t._v("取余赋值运算")]),t._v(" "),s("td",[t._v("a%=1等效 a=a%1")])]),t._v(" "),s("tr",[s("td",[t._v("//=")]),t._v(" "),s("td",[t._v("取整赋值运算")]),t._v(" "),s("td",[t._v("a//=1等效 a=a//1")])]),t._v(" "),s("tr",[s("td",[t._v("**=")]),t._v(" "),s("td",[t._v("幂赋值运算")]),t._v(" "),s("td",[t._v("a**=1等效 a=a**1")])])])]),t._v(" "),s("h3",{attrs:{id:"比较运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),s("p",[t._v("也叫关系运算符，用于比较两者的关系。比较的结果返回 True 或 Flase")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("大于，如果前值大于后值则返回 True 否则返回 Flase")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("大于或等于，如果前值大于或等于后值则返回 True 否则返回 Flase")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("小于，返回同上")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("小于或等于， 返回同上")])]),t._v(" "),s("tr",[s("td",[t._v("==")]),t._v(" "),s("td",[t._v("等于，返回同上")])]),t._v(" "),s("tr",[s("td",[t._v("!=")]),t._v(" "),s("td",[t._v("不等于，返回同上")])]),t._v(" "),s("tr",[s("td",[t._v("is")]),t._v(" "),s("td",[t._v("判断两个变量的引用是否相同，如果相同则返回 True 否则返回 Flase")])]),t._v(" "),s("tr",[s("td",[t._v("is not")]),t._v(" "),s("td",[t._v("判断两个变量的引用是否不相同，如果不相同则返回 True 否则返回 Flase")])])])]),t._v(" "),s("p",[t._v("前面几个比较运算符非常好理解，就是大小的比较，可能 "),s("code",[t._v("is")]),t._v("与"),s("code",[t._v("is not")]),t._v("比较疑惑。")]),t._v(" "),s("p",[t._v("首先 "),s("code",[t._v("is")]),t._v(" 与 "),s("code",[t._v("==")]),t._v(" 是完全不同的，它们是两回事情。大家不要搞错了。我们来看两个例子。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("Flase\n")])])]),s("p",[t._v("你会发现上面为 True，下面为 Flase。其实这里是因为 "),s("code",[t._v("==")]),t._v(" 比较的是两个值的大小。而 "),s("code",[t._v("is")]),t._v(" 是比较的两个变量的引用。")]),t._v(" "),s("p",[t._v("我们在上一章节中说数据类型时，就说到变量是用来保存值的引用的。我们可以用 "),s("code",[t._v("id()")]),t._v("函数来查看一个变量的引用。而 "),s("code",[t._v("is")]),t._v(" 比较的就是这个引用。")]),t._v(" "),s("h3",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[t._v("逻辑运算符主要包含：and（与）、or（或）、not（非）")]),t._v(" "),s("p",[t._v("x and y：当两个值全为 True 时，才会返回 True，否则返回 Flase，除此之外，当 x 为 True，它返回的是 y 的值，当 x 为 Flase时，它返回的是 Flase。")]),t._v(" "),s("p",[t._v("x or y：当两个值全为 Flase 时，才会返回 Flase，否则返回 True，除此之外，当 x 为 True时，则返回 True，如果 x 为 Flase时，它返回的就是 y 的值。")]),t._v(" "),s("p",[t._v("not x：x 为 True，它返回 False，x 为 Flase，它返回 True。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 返回Flase\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 返回"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 返回Flase\n")])])]),s("h3",{attrs:{id:"三目运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三目运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 三目运算符")]),t._v(" "),s("p",[t._v("在 JavaScript 中三目运算的语法是这样的：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("判断条件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" 为真时的结果 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 为假时的结果\n")])])]),s("p",[t._v("而 python 却不同。它是利用 "),s("code",[t._v("if else")]),t._v("来表达三目运算。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("为真时的结果 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" 判断条件 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" 为假时的结果 \n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a > b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a < b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=_.exports}}]);